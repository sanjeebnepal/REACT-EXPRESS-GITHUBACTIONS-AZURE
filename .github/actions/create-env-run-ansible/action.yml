name: "Run Ansible Playbook"
description: "Install Ansible, setup SSH, create backend .env, and run playbook with environment targeting"
inputs:
  environment:  # NEW INPUT
    description: "Environment to target (test/prod)"
    required: true
    default: "test"
  server-ip:
    description: "IP address of the remote server"
    required: true
  ssh-key:
    description: "SSH private key"
    required: true
  playbook-path:
    description: "Path to Ansible playbook"
    required: true
  inventory-path:
    description: "Path to Ansible inventory"
    required: true
  db-host:
    description: "Database host"
    required: true
  db-user:
    description: "Database username"
    required: true
  db-pass:
    description: "Database password"
    required: true
  db-port:
    description: "Database port"
    required: true
  db-name:
    description: "Database name"
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Ansible
      run: sudo apt-get update && sudo apt-get install -y ansible sshpass
      shell: bash

    - name: Configure SSH access
      run: |
        mkdir -p ~/.ssh
        echo "${{ inputs.ssh-key }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "[${{ inputs.environment }}servers]" > ${{ inputs.inventory-path }}
        echo "${{ inputs.server-ip }} ansible_user=azureuser" >> ${{ inputs.inventory-path }}
        ssh-keyscan ${{ inputs.server-ip }} >> ~/.ssh/known_hosts
      shell: bash

    - name: Create backend .env remotely
      run: |
        ssh -i ~/.ssh/id_rsa azureuser@${{ inputs.server-ip }} "mkdir -p /home/azureuser/app/backend"
        ssh -i ~/.ssh/id_rsa azureuser@${{ inputs.server-ip }} "cat > /home/azureuser/app/backend/.env" <<EOF
        DB_HOST=${{ inputs.db-host }}
        DB_USER=${{ inputs.db-user }}
        DB_PASS=${{ inputs.db-pass }}
        DB_PORT=${{ inputs.db-port }}
        DB_NAME=${{ inputs.db-name }}
        NODE_ENV=production
        PORT=5000
        EOF
      shell: bash

    - name: Verify .env file
      run: ssh -i ~/.ssh/id_rsa azureuser@${{ inputs.server-ip }} "cat /home/azureuser/app/backend/.env"
      shell: bash

    - name: Execute Ansible Playbook
      run: |
        ansible-playbook \
          -i ${{ inputs.inventory-path }} \
          ${{ inputs.playbook-path }} \
          --private-key ~/.ssh/id_rsa \
          --limit ${{ inputs.environment }}servers
      env:
        ANSIBLE_HOST_KEY_CHECKING: "False"
        TARGET_ENV: "${{ inputs.environment }}"  # For playbook safety checks
      shell: bash