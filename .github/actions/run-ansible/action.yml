name: "Run Ansible Playbook"
description: "Install Ansible, setup SSH, and run playbook with environment targeting"
inputs:
  environment:
    description: "Environment to target (test/prod)"
    required: true
    default: "test"
  server-ip:
    description: "IP address of the remote server"
    required: true
  ssh-key:
    description: "SSH private key"
    required: true
  playbook-path:
    description: "Path to Ansible playbook"
    required: true
  inventory-path:
    description: "Path to Ansible inventory"
    required: true
  db-host:
    description: "Database host"
    required: true
  db-user:
    description: "Database username"
    required: true
  db-pass:
    description: "Database password"
    required: true
  db-port:
    description: "Database port"
    required: true
  db-name:
    description: "Database name"
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Ansible
      run: sudo apt-get update && sudo apt-get install -y ansible sshpass
      shell: bash

    - name: Configure SSH access
      run: |
        mkdir -p ~/.ssh
        echo "${{ inputs.ssh-key }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "[${{ inputs.environment }}servers]" > ${{ inputs.inventory-path }}
        echo "${{ inputs.server-ip }} ansible_user=azureuser" >> ${{ inputs.inventory-path }}
        ssh-keyscan ${{ inputs.server-ip }} >> ~/.ssh/known_hosts
      shell: bash

    - name: Execute Ansible Playbook
      run: |
        ansible-playbook \
          -i ${{ inputs.inventory-path }} \
          ${{ inputs.playbook-path }} \
          --private-key ~/.ssh/id_rsa \
          --limit ${{ inputs.environment }}servers \
          -e "db_host=${{ inputs.db-host }}" \
          -e "db_user=${{ inputs.db-user }}" \
          -e "db_pass=${{ inputs.db-pass }}" \
          -e "db_port=${{ inputs.db-port }}" \
          -e "db_name=${{ inputs.db-name }}"
      env:
        ANSIBLE_HOST_KEY_CHECKING: "False"
      shell: bash